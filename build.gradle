// Настройки для всех проектов
import org.apache.tools.ant.filters.ReplaceTokens

allprojects {

    apply plugin: 'java'
    repositories {
        mavenCentral()
        mavenLocal()
    }
    dependencies {
        compileOnly 'org.projectlombok:lombok:1.18.12'
        annotationProcessor 'org.projectlombok:lombok:1.18.12'

        testCompileOnly 'org.projectlombok:lombok:1.18.12'
        testAnnotationProcessor 'org.projectlombok:lombok:1.18.12'
        compileOnly 'org.jetbrains:annotations:16.0.2'
    }

    group = 'ru.spliterash'
    version = '3.0.4'

    sourceCompatibility = 1.8
    targetCompatibility = 1.8

    processResources {
        from(sourceSets.main.resources.srcDirs) {
            filter ReplaceTokens, tokens: [version: version]
        }
    }

}

subprojects {
    dependencies {
        compileOnly parent
    }
    jar {
        from {
            def projectClasses = configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
            def subProject = subprojects.collect { p ->
                p.jar.outputs.files.getFiles().collect {
                    it.isDirectory() ? it : zipTree(it)
                }
            }
            return projectClasses + subProject
        }.exclude('META-INF', 'META-INF/**')
    }
}

dependencies {
    compileOnly 'com.google.code.gson:gson:2.8.0'
}

String jarName = 'VkChat'
File jarFolder = file("$rootDir/jars/")
task createFatJar(type: Jar) {
    dependsOn allprojects.build
    destinationDirectory = jarFolder
    archiveFileName = jarName + ".jar"
    from {
        def projectClasses = configurations.compile.collect { it.isDirectory() ? it : zipTree(it) }
        def subProject = subprojects.collect { p ->
            p.jar.outputs.files.getFiles().collect {
                it.isDirectory() ? it : zipTree(it)
            }
        }
        return projectClasses + subProject
    }
    exclude('META-INF', 'META-INF/**')
    with jar
}